<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_menu_system</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Intialize building preview
event_inherited();

// Change axis of controls
arrow_axis = "horizontal";
maxLen = 40;

// Set Position
x = room_width*(0.838/2);
y = room_height*(0.563/2)

image_speed = 0;

list = scr_list_create();
map = global.keeper[? "inv_holder"];
list = map[? "inventory"];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update preview
if (currSelection != selection || currElement != list[| selection]) {
    var el = list[| selection];
    
    if (el == undefined) exit;
    
    var player_coins = ds_map_find_value(ds_map_find_value(global.player, "detail"), "coins");
    var keeper_coins = ds_map_find_value(ds_map_find_value(global.keeper, "detail"), "coins");
    
    var stat = el[? "stat"];
    var price = string(scr_price_object(el));

    var preview = global.keeper[? "preview"];
    preview[? "title"] = el[? "name"];
    preview[? "phrase"] = "$" + price + "#&lt;Health : " + string(stat[? "health"]) 
            + "&gt; &lt;Defense : " + string(stat[? "defence"] )
            + "&gt;#&lt;Attack : " + string(stat[? "attack"])
            + "&gt; &lt;Speed : " + string(stat[? "speed"]) + "&gt;#Coins : $"
            + string(player_coins) + "     Store: $" + string(keeper_coins);
}
             
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update inventory holder info
map[? "selection"] = selection;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change sprite
event_inherited();
len = ds_list_size(list);
if (currSelection != selection || currElement != list[| selection]) {
    currSelection = selection;
    currElement = list[| selection];
    
    // Change back
    if (selection &gt; 0) {
        var el = list[| selection - 1];
        var val = el[? "index"];
        var modif = val % 2;
        el[? "index"] = val - (1 * modif);
    }
    
    // Change front
    if (selection &lt; len - 1) {
        var el = list[| selection + 1];
        var val = el[? "index"];
        var modif = val % 2;
        el[? "index"] = val - (1 * modif);
    }
    
    // Change current
    var el = list[| selection];
    var val = el[? "index"];
    el[? "index"] = val + 1;
    
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Edit position
var colLen = 8;
var std_offset = 15 * 4;

if (currLen != len) {
    for (var i = 0; i &lt; len; i++) {
        var el = list[| i];
        var base = list[| 0];
        
        var yPos = 0;
        var xPos = std_offset;
        
        if (((i + 1) % colLen == 0 &amp;&amp; i != 0)) {
            yPos = std_offset * 1.05 * ((i+1)/colLen);
            xPos *= -1 * (colLen-1);
        }

        el[? "yoffset"] = yPos;
        el[? "xoffset"] = xPos;

    }
    currLen = len;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
