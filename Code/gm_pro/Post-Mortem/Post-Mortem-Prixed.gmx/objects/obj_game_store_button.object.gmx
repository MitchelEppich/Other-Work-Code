<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_menu_system</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Intialize building preview
event_inherited();

// Change axis of controls
arrow_axis = "horizontal";

// Set up graphics
sprite = spr_store_button;

arrow_axis = "vertical";

// Set Position
x = room_width*(0.855/2);
y = room_height*(1.465/2)

map = global.keeper[? "inv_holder"];
inv_ref = map[? "inventory"];

// Create menu levels
var assist = ds_map_create(), chat = ds_map_create(), buy = ds_map_create(), sell = ds_map_create(), check = ds_map_create();

var std_offset = 27;
image_speed = 0;
len = 5;
scr_element_create(assist, sprite, std_offset * 4.43, 0, 3, c_white, 1, -1, -1, -1, -1, 0, -1);
scr_element_create(chat, sprite, std_offset * 3.88, 0, 3, c_white, 1, -1, -1, -1, -1, 2, -1);
scr_element_create(buy, sprite, std_offset * 3.13, 0, 3, c_white, 1, -1, -1, -1, -1, 4, -1);
scr_element_create(sell, sprite, std_offset * 3.78, 0, 3, c_white, 1, -1, -1, -1, -1, 6, "goto::rm_game_store_sell");
scr_element_create(check, sprite, std_offset * 4, 0, 3, c_white, 1, -1, -1, -1, -1, 8, -1);

list = scr_list_create(assist, chat, buy, sell, check);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change sprite
event_inherited();
len = ds_list_size(list);
if (currSelection != selection) {
    currSelection = selection;
    
    // Change back
    if (selection &gt; 0) {
        var el = list[| selection - 1];
        var val = el[? "index"];
        var modif = val % 2;
        el[? "index"] = val - (1 * modif);
    }
    
    // Change front
    if (selection &lt; len - 1) {
        var el = list[| selection + 1];
        var val = el[? "index"];
        var modif = val % 2;
        el[? "index"] = val - (1 * modif);
    }
    
    // Change current
    var el = list[| selection];
    var val = el[? "index"];
    el[? "index"] = val + 1;
    
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update button actions
if (key_enter) {
    var el = inv_ref[| map[? "selection"]];
    var n; // assist, chat, buy, sell, check
    switch (selection) {
        case 0:
            n = list[| 0];
            n[? "action"] = "assist::" + scr_generate_quest();
            break;
        case 1:
            n = global.keeper[? "detail"];
            var name = n[? "name"];
            n = global.keeper[? "preview"];
            n[? "title"] = name; // name
            n[? "phrase"] = scr_get_phrase(global.keeper); // chat
            break;
        case 2:
            n = list[| 2];
            n[? "action"] = "transaction::player~keeper~" + string(map[? "selection"]);
            break;
        case 3:
            // Handled in its own action : go to different room
            break;
        case 4:
            n = global.keeper[? "preview"];
            var c = el[? "action"];
            n[? "phrase"] = string_copy(c, 10, string_length(c));
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
