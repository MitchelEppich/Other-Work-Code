<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Intialize instance
image_speed = 0.2;

map = ds_map_create();
ds_map_copy(map, class);

stat = map[? "stat"];
info = map[? "info"];
detail = map[? "detail"];
inv_holder = map[? "inv_holder"];
preview = map[? "preview"];
body = map[? "body"];
pack = map[? "package"];
speech = map[? "speech"];
inventory = inv_holder[? "inventory"];

hp = stat[? "health"];

skin_color = c_white;
yscale = 1;
xscale = 1;


/*
alive = true;
hp = 10;
maxHp = hp;
air = 1;

density = 0.5;

enabled = true;

spd = 2; // horizontal speed
jump_spd = 7 * 2.4; // vertical speed

anchor = y;

base_anchor = 0;

package = noone;
package_joint = -1;

sprite = spr_human;
costume = -1;
skin_color = SKIN_PEACH;

target = noone;
team = "neutral";

intel_distance = -1;
intel_dir = -1;

dir = 0;
xlen = 0;
ylen = 0;
face = RIGHT;

body_bag = ds_list_create();

image_speed = 0.2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fixed rotation

// -- Do not touch -- //
phy_fixed_rotation = stat[? "fixed_rotation"];
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handler booleans

resting = false;
interacting = false;
attacking = false;

stealth = false;
chat = false;
afk = false;
shop = false;
trade = false;
targeted = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set local controls
interact = global.key[? "interact"];
attack = global.key[? "attack"];
spec = global.key[? "spec"];
space = global.key[? "space"];
right = global.key[? "right"];
left = global.key[? "left"];
up = global.key[? "up"];
down = global.key[? "down"];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set local controls
interact = global.key[? "interact"];
attack = global.key[? "attack"];
spec = global.key[? "spec"];
space = global.key[? "space"];
right = global.key[? "right"];
left = global.key[? "left"];
up = global.key[? "up"];
down = global.key[? "down"];
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Test object for grounded
stat[? "grounded"] = 
physics_test_overlap (x, y + 1, 0, obj_tile_base) &amp;&amp;
physics_test_overlap (x - 1, y + 1, 0, obj_tile_base) &amp;&amp;
physics_test_overlap (x + 1, y + 1, 0, obj_tile_base);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update health
stat[? "health"] = hp;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update depth if grounded

// -- Do not touch -- //
if (stat[? "grounded"])
    depth = -y; // Set depth equal to the negative of y-position
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update scale
if (stat[? "face"] == RIGHT) image_xscale = abs(image_xscale);
else if (stat[? "face"] == LEFT) image_xscale = -abs(image_xscale);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animation update

scr_animate_human(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update movement

// -- Do not touch -- //

interact = global.key[? "interact"];
attack = global.key[? "attack"];
spec = global.key[? "spec"];
space = global.key[? "space"];
right = global.key[? "right"];
left = global.key[? "left"];
up = global.key[? "up"];
down = global.key[? "down"];

stealth = down;

// Get axis
var xaxis = (right - left) * stat[? "alive"];
var yaxis = (-space) * stat[? "alive"]; // negative because y == 0 at top

// Get direction
stat[? "dir"] = point_direction (0, 0, xaxis, yaxis);

var xlen, ylen;

// Get length
if (xaxis == 0) {
    xlen = 0;
} else {
    scr_get_face();
    xlen = stat[? "speed"];
}

if (yaxis == 0) {
    ylen = 0;
} else {
    scr_get_face();
    ylen = stat[? "jump_force"];
}

// Get hspd and vspd
var hspd = lengthdir_x (xlen, stat[? "dir"]);
var vspd = lengthdir_y (ylen, stat[? "dir"]);

// If not grounded do not allow movement
if (!stat[? "grounded"]) { 
    hspd /= 2; // Slows movement in space
    vspd = 0;
}

if (stealth) hspd /= 4; // Slows total speed is in stealth mode

// Apply current movement through impulse
physics_apply_impulse(x, y, (hspd - phy_speed_x), vspd);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update attack
if (attack) {
    var dmg = instance_create (x - (2 * sign (stat[? "face"] - 1)), y - sprite_height/5, obj_damage);
    dmg.creator = id;
    
    resting = true;
    attacking = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sufficate handler

    if (spec) air = -0.1;

    var top = instance_place(x, y-16, obj_tile);
    var bottom = instance_place(x, y+16, obj_tile);
    var right = instance_place(x+16, y, obj_tile);
    var left = instance_place(x-16, y, obj_tile);
    
    if (top == noone) top = true;
    else top = top.isOpen;
    
    if (bottom == noone) bottom = true;
    else bottom = bottom.isOpen;
    
    if (right == noone) right = true;
    else right = right.isOpen;
    
    if (left == noone) left = true;
    else left = left.isOpen;
    
    var buried =
    !top &amp;&amp;
    !bottom &amp;&amp;
    !right &amp;&amp;
    !left;

if (buried) stat[? "air"] -= 0.01;
else if (stat[? "air"] &lt; 1) stat[? "air"] += 0.05;
if (stat[? "air"] &lt;= 0) stat[? "health"] -= 0.1;

skin_color = merge_color(stat[? "skin_tone"], SKIN_BLUE, 1 - stat[? "air"]);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Death handler
if (stat[? "health"] &lt;= 0) stat[? "alive"] = false;
if (!stat[? "alive"]) { 
    for (var i = 0; i &lt; ds_list_size(body); i++) {
        var part = instance_create(x, y, body[| i]);
        part.depth = depth;
        part.color = skin_color;
        part.hp = -1;
        with part {physics_apply_impulse(x, y, random(0.2) * (irandom(2) - 1), -random(0.2)); }
    }

    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Acquire and Release package
if (interact) {

    var package = pack[? "package"];

    if (instance_number(obj_package) == 0) exit;
    
    var q_package = instance_nearest (x, y, obj_package).id;

    if (package == noone &amp;&amp; physics_test_overlap (x, y, 0, obj_package) &amp;&amp; q_package.target == noone) {
        package = q_package
        package_joint = physics_joint_rope_create(id, package, x, y - sprite_height/2, package.x, package.y, package.bound, false);
        package.target = id;
    } else if (package != noone &amp;&amp; physics_test_overlap (x, y, 0, obj_package)) {
        package.target = noone;
        package = noone;
        physics_joint_delete(package_joint);
    }
    
    interacting = true;
    alarm [1] = room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collider
// -- Do not remove -- //
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Instance remove
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw self
if (stat[? "sprite"] != noone) draw_sprite_ext (stat[? "sprite"], -1, x, y, image_xscale * xscale, image_yscale * yscale, 0, skin_color, 1);
else instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw costume
//if (costume != noone) draw_sprite_ext (costume, image_index, x, y, image_xscale, image_yscale, 0, -1, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
