<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_human_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_npc</parentName>
  <maskName>spr_human_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialisation
x_scale = 1.0;
y_scale = 1.0;

hsp = 0;
vsp = 0;

// Camera 
if(!instance_exists(obj_camera))
{
    instance_create(0, 0, obj_camera);
}

// State Variables
_state = scr_player_stand;
attack_style = 0;
_health = 10;

_follow = false;
_with = false;

damage_dealt = false;

follow_distance = 6;

_edge_scale = false;

// State booleans
attacking = false;
scaling = false;
stunned = false;
_stealth = false;
rolling = false;
alive = true;

// Animation Variables 
alpha = 1;
weapon_sprite_index = noone;

// Movement Variables

master_spd = 1.0;

grnd_acc = 0.15*master_spd;
grnd_max = 4*master_spd;

air_acc = 0.1*master_spd;
air_fric = 0.01;
air_max = 3.5*master_spd;

jump_spd = -3.0*master_spd;
jump_hold = false;

grounded = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset stun
stunned = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset jump hold
jump_hold = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update Movement variables
grnd_acc = 0.15*master_spd;
grnd_max = 4*master_spd;

air_acc = 0.1*master_spd;
air_fric = 0.01;
air_max = 3.5*master_spd;

jump_spd = -3.0*master_spd;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Brain
alive = _health&gt;0;
// Controls 
if (!stunned &amp;&amp; alive) scr_player_controls();
// Collision ////////////////////////////
scr_player_collision();
// Gravity //////////////////////////////
grounded = scr_player_grounded();
// Scale and animation //////////////////
scr_player_keep_stats();

// Select what to do
if (grounded) 
{ 
    if (!_stealth)
    {
        
        if (hsp != 0) 
        {
            _state = states.walk;
            if (_follow) _state = states.walk_follow;
            if (_with) _state = states.walk_with;
        }
        
        if (abs(hsp) &gt; grnd_max/2) 
        {
            _state = states.run;
            if (_follow) _state = states.run_follow;
            if (_with) _state = states.run_with;
        }
        
        if (rolling) _state = states.roll;
        
        if (hsp == 0 &amp;&amp; vsp == 0) 
        {
            _state = states.stand;
            if (_follow) _state = states.stand_follow;
            if (_with) _state = states.stand_with;
        }
        
        if (attacking) _state = states.attack;
        if (!alive) _state = states.death;
        
    } else {
        if (hsp == 0 &amp;&amp; vsp == 0) _state = states.stealth_stand;
        if (hsp != 0) _state = states.stealth_walk; 
    }
} else if (scaling) { 
    _state = states.scale;
} else {
    _state = states.jump;
}

if (stunned) _state = states.stun;

// Execute State
switch(_state) {
    case states.stand: scr_player_stand(); break;
    case states.walk: scr_player_walk(); break;
    case states.run: scr_player_run(); break;
    case states.scale: scr_player_scale(); break;
    case states.jump: scr_player_jump(); break;
    case states.roll: scr_player_roll(); break;
    case states.attack: scr_player_attack(); break;
    case states.stun: scr_player_stun(); break;
    case states.death: scr_player_death(); break;
    case states.stealth_stand: scr_player_stealth_stand(); break;
    case states.stealth_walk: scr_player_stealth_walk(); break;
    case states.stealth_run: show_error("No stealth run.", false); break;
    case states.stand_with: scr_player_stand_with(); break;
    case states.stand_follow: scr_player_stand_follow(); break;
    case states.walk_with: scr_player_walk_with(); break;
    case states.walk_follow: scr_player_walk_follow(); break;
    case states.run_with: scr_player_run_with(); break;
    case states.run_follow: scr_player_run_follow(); break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw self
draw_sprite_ext(sprite_index, image_index, x, y, x_scale, y_scale, image_angle, image_blend, alpha);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw weapon

if (weapon_sprite_index != noone)
{
    draw_sprite_ext(weapon_sprite_index, image_index, x, y, x_scale, y_scale, image_angle, c_white, alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="48">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_health = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
