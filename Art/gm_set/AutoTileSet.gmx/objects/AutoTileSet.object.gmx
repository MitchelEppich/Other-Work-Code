<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>RockTileset</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dirty=true;
image_speed=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (dirty) {
    image_index=1;
    
    index=20;
    
    i=0;  j=-1; Near[0]=collision_point(x+i*sprite_width,y+j*sprite_height,AutoTileSet,false,true);
    i=1;  j=0;  Near[1]=collision_point(x+i*sprite_width,y+j*sprite_height,AutoTileSet,false,true);
    i=0;  j=1;  Near[2]=collision_point(x+i*sprite_width,y+j*sprite_height,AutoTileSet,false,true);
    i=-1; j=0;  Near[3]=collision_point(x+i*sprite_width,y+j*sprite_height,AutoTileSet,false,true);
    i=-1; j=-1; Near[4]=collision_point(x+i*sprite_width,y+j*sprite_height,AutoTileSet,false,true);
    i=1;  j=-1; Near[5]=collision_point(x+i*sprite_width,y+j*sprite_height,AutoTileSet,false,true);
    i=1;  j=1;  Near[6]=collision_point(x+i*sprite_width,y+j*sprite_height,AutoTileSet,false,true);
    i=-1; j=1;  Near[7]=collision_point(x+i*sprite_width,y+j*sprite_height,AutoTileSet,false,true);

    if (Neighbours(Near[3])){index=26;}
    if (Neighbours(Near[0])){index=19;}
    if (Neighbours(Near[1])){index=24;}
    if (Neighbours(Near[2])){index= 3;}
    if (Neighbours(Near[1],Near[3])){index=25;}
    if (Neighbours(Near[0],Near[2])){index=11;}
    if (Neighbours(Near[0],Near[3])){index=23;}
    if (Neighbours(Near[1],Near[0])){index=21;}
    if (Neighbours(Near[2],Near[1])){index= 5;}
    if (Neighbours(Near[3],Near[2])){index= 7;}
    if (Neighbours(Near[2],Near[3],Near[7])){index= 2;}
    if (Neighbours(Near[3],Near[0],Near[4])){index=18;}
    if (Neighbours(Near[0],Near[1],Near[5])){index=16;}
    if (Neighbours(Near[1],Near[2],Near[6])){index= 0;}
    if (Neighbours(Near[0],Near[1],Near[3])){index=44;}
    if (Neighbours(Near[1],Near[2],Near[0])){index=36;}
    if (Neighbours(Near[2],Near[3],Near[1])){index=37;}
    if (Neighbours(Near[3],Near[0],Near[2])){index=45;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3])){index=14;}
    if (Neighbours(Near[0],Near[2],Near[3],Near[7])){index=45;}
    if (Neighbours(Near[1],Near[3],Near[0],Near[4])){index=44;}
    if (Neighbours(Near[2],Near[0],Near[1],Near[5])){index=36;}
    if (Neighbours(Near[3],Near[1],Near[2],Near[6])){index=37;}
    if (Neighbours(Near[0],Near[1],Near[3],Near[5])){index=43;}
    if (Neighbours(Near[1],Near[2],Near[0],Near[6])){index=42;}
    if (Neighbours(Near[2],Near[3],Near[1],Near[7])){index=34;}
    if (Neighbours(Near[3],Near[0],Near[2],Near[4])){index=35;}
    if (Neighbours(Near[1],Near[2],Near[3],Near[6],Near[7])){index= 1;}
    if (Neighbours(Near[0],Near[2],Near[3],Near[4],Near[7])){index=10;}
    if (Neighbours(Near[0],Near[1],Near[3],Near[4],Near[5])){index=17;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[5],Near[6])){index= 8;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[7])){index=46;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[4])){index=38;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[5])){index=39;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[6])){index=47;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[5],Near[7])){index=12;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[4],Near[6])){index= 4;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[6],Near[7])){index=29;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[4],Near[7])){index=30;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[4],Near[5])){index=31;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[5],Near[6])){index=28;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[5],Near[6],Near[7])){index=41;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[4],Near[6],Near[7])){index=40;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[4],Near[5],Near[7])){index=32;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[4],Near[5],Near[6])){index=33;}
    if (Neighbours(Near[0],Near[1],Near[2],Near[3],Near[4],Near[5],Near[6],Near[7])){index= 9;}

    sx=index % 8;
    sy=floor(index/8);

    image_index=index;
    dirty=false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
